{"id":910,"date":"2022-10-27T17:04:04","date_gmt":"2022-10-27T11:34:04","guid":{"rendered":"https:\/\/vinayaroratech.com\/?p=910"},"modified":"2022-10-27T17:04:05","modified_gmt":"2022-10-27T11:34:05","slug":"using-stripe-js-elements-with-angular","status":"publish","type":"post","link":"https:\/\/vinayaroratech.com\/dotnet\/using-stripe-js-elements-with-angular\/","title":{"rendered":"Using Stripe.js Elements with Angular"},"content":{"rendered":"\n<h2>Introduction<\/h2>\n\n\n\n<p>This will cover a simple example of how to get a credit card payment source token from Stripe that you can use to associate a Stripe customer with a payment source. This is good for subscription services where you need to store the payment source to later add subscriptions to.<\/p>\n\n\n\n<p>We will look at the process for using Stripe.js Elements to create a credit card form that will obtain the token we need.<\/p>\n\n\n\n<p>Refer to the&nbsp;<a href=\"https:\/\/stripe.com\/docs\/stripe-js\">official Stripe.js &amp; Elements documentation<\/a>&nbsp;for more information.<\/p>\n\n\n\n<h2>Steps<\/h2>\n\n\n\n<p>You can follow the&nbsp;<a href=\"https:\/\/stripe.com\/docs\/stripe-js\">official Stripe.js &amp; Elements documentation<\/a>&nbsp;for the most part just as they are, but there are a couple things to know when using it with Angular.<\/p>\n\n\n\n<p>The general process is like this:<\/p>\n\n\n\n<ul><li>Add the Stripe.js include to the&nbsp;<code>&lt;head&gt;<\/code>&nbsp;of your&nbsp;<code>index.html<\/code>.<\/li><li>Add the Stipe HTML form to the&nbsp;<code>*.component.html<\/code>&nbsp;file of a component<\/li><li>In the&nbsp;<code>*.component.ts<\/code>&nbsp;file declare&nbsp;<code>Stripe<\/code>&nbsp;object as external variable<\/li><li>In the&nbsp;<code>*.component.ts<\/code>&nbsp;file bind to the form submission and process with Stripe<\/li><\/ul>\n\n\n\n<h3>ADD THE STRIPE.JS INCLUDE<\/h3>\n\n\n\n<p>In the&nbsp;<code>&lt;head&gt;<\/code>&nbsp;tag of the&nbsp;<code>index.html<\/code>&nbsp;file, add the Stripe.js Elements include:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code><strong>&lt;script<\/strong> <strong>src<\/strong>=\"https:\/\/js.stripe.com\/v3\/\"<strong>&gt;&lt;\/script&gt;<\/strong><\/code><\/pre>\n\n\n\n<h3>ADD STRIPE FORM HTML<\/h3>\n\n\n\n<p>In a&nbsp;<code>*.component.html<\/code>&nbsp;file add the payment form. For example:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code><strong>&lt;form<\/strong> <strong>action<\/strong>=\"\/charge\" <strong>method<\/strong>=\"post\" <strong>id<\/strong>=\"payment-form\"<strong>&gt;<\/strong>\n  <strong>&lt;div<\/strong> <strong>class<\/strong>=\"form-row\"<strong>&gt;<\/strong>\n    <strong>&lt;label<\/strong> <strong>for<\/strong>=\"card-element\"<strong>&gt;<\/strong>Credit or debit card<strong>&lt;\/label&gt;<\/strong>\n    <strong>&lt;div<\/strong> <strong>id<\/strong>=\"card-element\"<strong>&gt;&lt;\/div&gt;<\/strong>\n    <strong>&lt;div<\/strong> <strong>id<\/strong>=\"card-errors\" <strong>role<\/strong>=\"alert\"<strong>&gt;&lt;\/div&gt;<\/strong>\n  <strong>&lt;\/div&gt;<\/strong>\n  <strong>&lt;button&gt;<\/strong>Add payment source<strong>&lt;\/button&gt;<\/strong>\n<strong>&lt;\/form&gt;<\/strong><\/code><\/pre>\n\n\n\n<p>Again refer to the&nbsp;<a href=\"https:\/\/stripe.com\/docs\/stripe-js\">official Stripe.js &amp; Elements documentation<\/a>&nbsp;for the latest code.<\/p>\n\n\n\n<h3>THE CSS<\/h3>\n\n\n\n<p>You can style the form however you want, or not do any styling at all. Refer to the&nbsp;<a href=\"https:\/\/stripe.com\/docs\/stripe-js\">official Stripe.js &amp; Elements documentation<\/a>&nbsp;for examples of CSS you can use. Also refer to [https:\/\/stripe.dev\/elements-examples\/](https:\/\/stripe.dev\/elements-examples\/(https:\/\/stripe.dev\/elements-examples\/).<\/p>\n\n\n\n<p>Here are couple CSS selectors you can use to style the primary aspects of the form if desired:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/ Main form styling\n.StripeElement { }\n\n\/\/ Focused field that user has text cursor in\n.StripeElement--focus { }\n\n\/\/ A field with an error or incomplete\n.StripeElement--invalid { }<\/code><\/pre>\n\n\n\n<h3>DECLARE STRIPE VAR AS EXTERNAL VARIABLE<\/h3>\n\n\n\n<p>Inside the Angular component, the&nbsp;<code>Stripe<\/code>&nbsp;object is not defined, and is coming from the JavaScript include in the&nbsp;<code>&lt;head&gt;<\/code>&nbsp;of&nbsp;<code>index.html<\/code>. To address this, it must be declared as an external variable.<\/p>\n\n\n\n<p>Do this at the top of the component file (<code>*.component.ts<\/code>), outside of the component before it is declared. Add:<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/ Before the component\ndeclare <strong>var<\/strong> Stripe: any;<\/code><\/pre>\n\n\n\n<p>Once you have done this, you can use the Stripe.js example code pretty much as it is. Inside the&nbsp;<code>ngOnInit()<\/code>&nbsp;method you can put all the code to set up the events on the credit card field<\/p>\n\n\n\n<p>For the official JavaScript code example refer to&nbsp;<a href=\"https:\/\/stripe.com\/docs\/stripe-js\">official Stripe.js &amp; Elements documentation<\/a><\/p>\n\n\n\n<pre class=\"wp-block-code\"><code> \/\/ ...\n \/\/ Inside the component\n \/\/ Code adapted from example at https:\/\/stripe.com\/docs\/stripe-js\n\n ngOnInit() {\n    \/\/ Your Stripe public key\n    <strong>const<\/strong> stripe = Stripe('pk_test_123456123456123456');\n\n    \/\/ Create `card` element that will watch for updates\n    \/\/ and display error messages\n    <strong>const<\/strong> elements = stripe.elements();\n    <strong>const<\/strong> card = elements.create('card');\n    card.mount('#card-element');\n    card.addEventListener('change', <strong>event<\/strong> =&gt; {\n      <strong>const<\/strong> displayError = document.getElementById('card-errors');\n      <strong>if<\/strong> (<strong>event<\/strong>.error) {\n        displayError.textContent = <strong>event<\/strong>.error.message;\n      } <strong>else<\/strong> {\n        displayError.textContent = '';\n      }\n    });\n\n    \/\/ Listen for form submission, process the form with Stripe,\n    \/\/ and get the \n    <strong>const<\/strong> paymentForm = document.getElementById('payment-form');\n    paymentForm.addEventListener('submit', <strong>event<\/strong> =&gt; {\n      <strong>event<\/strong>.preventDefault();\n      stripe.createToken(card).<strong>then<\/strong>(result =&gt; {\n        <strong>if<\/strong> (result.error) {\n          console.log('Error creating payment method.');\n          <strong>const<\/strong> errorElement = document.getElementById('card-errors');\n          errorElement.textContent = result.error.message;\n        } <strong>else<\/strong> {\n          \/\/ At this point, you should send the token ID\n          \/\/ to your server so it can attach\n          \/\/ the payment source to a customer\n          console.log('Token acquired!');\n          console.log(result.token);\n          console.log(result.token.id);\n        }\n      });\n    });\n  }\n\n  \/\/ ...<\/code><\/pre>\n\n\n\n<p>After you get the token from the form submission, you should send it to your backend server so it can use the payment source token to attach the payment method to a Stripe customer. Refer to\u00a0<a href=\"https:\/\/stripe.com\/docs\/sources\/customers\">https:\/\/stripe.com\/docs\/sources\/customers<\/a>\u00a0for more information on Sources and Customers.<\/p>\n\n\n\n<p>Here is the <a href=\"https:\/\/github.com\/vinaykarora\/angular-stripe-element\">full code<\/a><\/p>\n\n\n\n<h2>Conclusion<\/h2>\n\n\n\n<p>You should now have a better understanding of how to use Stripe.js elements from an Angular component.<\/p>\n\n\n\n<h2>References<\/h2>\n\n\n\n<ul><li><a href=\"https:\/\/stripe.com\/docs\/stripe-js\">Stripe.js &amp; Elements documentation<\/a><\/li><li><a href=\"https:\/\/stripe.dev\/elements-examples\/\">Elements examples<\/a><\/li><li><a href=\"https:\/\/stripe.com\/docs\/sources\/customers\">Stripe Sources and Customers<\/a><\/li><\/ul>\n","protected":false},"excerpt":{"rendered":"<p>Introduction This will cover a simple example of how to get a credit card payment source token from Stripe that you can use to associate a Stripe customer with a payment source. This is good for subscription services where you need to store the payment source to later add subscriptions to. We will look at &hellip;<\/p>\n<p class=\"read-more\"> <a class=\"\" href=\"https:\/\/vinayaroratech.com\/dotnet\/using-stripe-js-elements-with-angular\/\"> <span class=\"screen-reader-text\">Using Stripe.js Elements with Angular<\/span> Read More &raquo;<\/a><\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[1],"tags":[70,73,72,71,74],"_links":{"self":[{"href":"https:\/\/vinayaroratech.com\/wp-json\/wp\/v2\/posts\/910"}],"collection":[{"href":"https:\/\/vinayaroratech.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/vinayaroratech.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/vinayaroratech.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/vinayaroratech.com\/wp-json\/wp\/v2\/comments?post=910"}],"version-history":[{"count":1,"href":"https:\/\/vinayaroratech.com\/wp-json\/wp\/v2\/posts\/910\/revisions"}],"predecessor-version":[{"id":911,"href":"https:\/\/vinayaroratech.com\/wp-json\/wp\/v2\/posts\/910\/revisions\/911"}],"wp:attachment":[{"href":"https:\/\/vinayaroratech.com\/wp-json\/wp\/v2\/media?parent=910"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/vinayaroratech.com\/wp-json\/wp\/v2\/categories?post=910"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/vinayaroratech.com\/wp-json\/wp\/v2\/tags?post=910"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}